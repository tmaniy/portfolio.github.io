{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyN8OGW6R3j9Xd1ItkIa9/U1",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/tmaniy/portfolio.github.io/blob/main/project_1.ipynb(internship%20project)%20-%20Mileage%20prediction%20using%20regression%20anaylysis\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        " **MILEAGE PREDICTION MODEL : REGRESSION ANALYSIS**"
      ],
      "metadata": {
        "id": "2FmNXjLxfRkT"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**DATA SOURCE:The dataset was taken from StateLib library which is maintained at Carnegie Mellon University**"
      ],
      "metadata": {
        "id": "YnU57uNofRZN"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**IMPORT LIBRARY**"
      ],
      "metadata": {
        "id": "CeuWjmMHfMTb"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "XOKsHz6YPATN"
      },
      "outputs": [],
      "source": [
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np"
      ],
      "metadata": {
        "id": "-MLhSINnPGxn"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "_nBMdg5FPKb-"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "MOmrjqCDPTtG"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**IMPORT DATA**"
      ],
      "metadata": {
        "id": "Q-IVNq7DfJKZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('https://github.com/YBI-Foundation/Dataset/raw/main/MPG.csv')"
      ],
      "metadata": {
        "id": "RW8SayXHQzg4"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "n9hKPCZ7Q0Dg",
        "outputId": "e973092e-b850-402e-ece2-8950c206b3c1"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    mpg  cylinders  displacement  horsepower  weight  acceleration  \\\n",
              "0  18.0          8         307.0       130.0    3504          12.0   \n",
              "1  15.0          8         350.0       165.0    3693          11.5   \n",
              "2  18.0          8         318.0       150.0    3436          11.0   \n",
              "3  16.0          8         304.0       150.0    3433          12.0   \n",
              "4  17.0          8         302.0       140.0    3449          10.5   \n",
              "\n",
              "   model_year origin                       name  \n",
              "0          70    usa  chevrolet chevelle malibu  \n",
              "1          70    usa          buick skylark 320  \n",
              "2          70    usa         plymouth satellite  \n",
              "3          70    usa              amc rebel sst  \n",
              "4          70    usa                ford torino  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-9ddfb273-1b95-4649-836a-7faf928e3701\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>mpg</th>\n",
              "      <th>cylinders</th>\n",
              "      <th>displacement</th>\n",
              "      <th>horsepower</th>\n",
              "      <th>weight</th>\n",
              "      <th>acceleration</th>\n",
              "      <th>model_year</th>\n",
              "      <th>origin</th>\n",
              "      <th>name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>18.0</td>\n",
              "      <td>8</td>\n",
              "      <td>307.0</td>\n",
              "      <td>130.0</td>\n",
              "      <td>3504</td>\n",
              "      <td>12.0</td>\n",
              "      <td>70</td>\n",
              "      <td>usa</td>\n",
              "      <td>chevrolet chevelle malibu</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>15.0</td>\n",
              "      <td>8</td>\n",
              "      <td>350.0</td>\n",
              "      <td>165.0</td>\n",
              "      <td>3693</td>\n",
              "      <td>11.5</td>\n",
              "      <td>70</td>\n",
              "      <td>usa</td>\n",
              "      <td>buick skylark 320</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>18.0</td>\n",
              "      <td>8</td>\n",
              "      <td>318.0</td>\n",
              "      <td>150.0</td>\n",
              "      <td>3436</td>\n",
              "      <td>11.0</td>\n",
              "      <td>70</td>\n",
              "      <td>usa</td>\n",
              "      <td>plymouth satellite</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>16.0</td>\n",
              "      <td>8</td>\n",
              "      <td>304.0</td>\n",
              "      <td>150.0</td>\n",
              "      <td>3433</td>\n",
              "      <td>12.0</td>\n",
              "      <td>70</td>\n",
              "      <td>usa</td>\n",
              "      <td>amc rebel sst</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>17.0</td>\n",
              "      <td>8</td>\n",
              "      <td>302.0</td>\n",
              "      <td>140.0</td>\n",
              "      <td>3449</td>\n",
              "      <td>10.5</td>\n",
              "      <td>70</td>\n",
              "      <td>usa</td>\n",
              "      <td>ford torino</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ddfb273-1b95-4649-836a-7faf928e3701')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-1497084e-54ca-4d35-b8b0-74abf6ab226d\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1497084e-54ca-4d35-b8b0-74abf6ab226d')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-1497084e-54ca-4d35-b8b0-74abf6ab226d button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9ddfb273-1b95-4649-836a-7faf928e3701 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9ddfb273-1b95-4649-836a-7faf928e3701');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**DATA PREPROCESSING**"
      ],
      "metadata": {
        "id": "q6_R-uxofE6e"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oPYWwu8URcXD",
        "outputId": "3f4eafe7-6b6f-4fc5-87dc-7ca1ba8e9c95"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 398 entries, 0 to 397\n",
            "Data columns (total 9 columns):\n",
            " #   Column        Non-Null Count  Dtype  \n",
            "---  ------        --------------  -----  \n",
            " 0   mpg           398 non-null    float64\n",
            " 1   cylinders     398 non-null    int64  \n",
            " 2   displacement  398 non-null    float64\n",
            " 3   horsepower    392 non-null    float64\n",
            " 4   weight        398 non-null    int64  \n",
            " 5   acceleration  398 non-null    float64\n",
            " 6   model_year    398 non-null    int64  \n",
            " 7   origin        398 non-null    object \n",
            " 8   name          398 non-null    object \n",
            "dtypes: float64(4), int64(3), object(2)\n",
            "memory usage: 28.1+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "id": "XO2CLA29Re00"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.corr()"
      ],
      "metadata": {
        "id": "z8BXg50aRolb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**REMOVE MISSING VALUES**"
      ],
      "metadata": {
        "id": "jEjcSH80e7y5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.dropna()"
      ],
      "metadata": {
        "id": "M09cGacfRslG"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "id": "P6gtKXgERyc_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**DATA VISUALISATION**"
      ],
      "metadata": {
        "id": "BvDG6xrqe0QY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.pairplot(df, x_vars = ['mpg', 'displacement', 'horsepower', 'weight','acceleration'] , y_vars=['mpg'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 271
        },
        "id": "vkV9SVPaR74c",
        "outputId": "8af4f7d2-c51d-430e-caba-75fd0b9b524c"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.PairGrid at 0x796f5e5153c0>"
            ]
          },
          "metadata": {},
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1250x250 with 6 Axes>"
            ],
            "image/png": "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wJ588klWXl5er/vI6m5GEARBEARBEARBEARBEIQTpHFGEARBEARBEARBEARBEALQxBlBEARBEARBEARBEARBCEATZwRBEARBEARBEARBEAQhAE2cEQRBEARBEARBEARBEIQANHFGEARBEARBEARBEARBEALQxBlBEARBEARBEARBEARBCEATZwRBEARBEARBEARBEAQhAE2cEQRBBAHDhg3Do48+CgDo0qUL/v73v/stbZlMhg0bNvgtPYJo6zjbK0EQhK/Ut38/d+4cZDIZDh061GR5Ioi2ytq1axEZGdli9yf7DiyULZ0BgiAIon7s27cPoaGhLZ2NoGTatGkoKyujiUKCIAgi4GiK/n3t2rV49NFHUVZW5td0CYLwH0Lj086dO6OwsBCxsbEtlzGChybOCIIggox27dq1dBYIgmhGzGYz1Gp1S2ejWWhLZSUId6h/J4jWhcVigUqlatC1CoUCHTt29HOOiIZCWzWJZmHYsGF46KGH8OijjyIqKgodOnTAO++8g+rqakyfPh3h4eEwGAz46quvAADbt2+HTCbDl19+id69e0Or1eL666/HkSNHXNJ955130LlzZ4SEhGDSpEl49dVXW9SlliD8QXV1Ne655x6EhYUhLi4Or7zyistx560cjDEsXrwY8fHx0Gg06NSpEx5++GGXc5ctW4bJkycjNDQU11xzDVavXi15/3nz5qF79+4ICQlB165dsWDBAlgsFpdzNm/ejIEDB0Kr1SI2NhaTJk3ij5lMJjzxxBO45pprEBoaikGDBmH79u38cc71fcuWLejRowdCQkLw5z//GUajER988AG6dOmCqKgoPPzww7DZbPVO95tvvkFKSgrCwsIwevRoFBYWAgAWL16MDz74ABs3boRMJoNMJnO5niD8id1ux1NPPYXo6Gh07NgRixcv5o8VFBRgwoQJCAsLg16vxx133IFLly7xxxcvXoy+ffvi3XffRWJiIrRaLQDgs88+Q1paGnQ6HWJiYjBy5EhUV1fz17377rtISUmBVqtFcnIy3nzzTf4Yt+Vj3bp1GDJkCLRaLXr16oUdO3a45HvHjh247rrroNFoEBcXh6effhpWqxUAsGXLFkRGRvJ2eejQIchkMjz99NP89bNmzcJf/vIX/u9du3YhKysLOp0OnTt3xsMPP+ySZ66Nuueee6DX63Hfffc15rETRLNS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imQav/zyC2644QYAgNVqxYEDBzB37lw+b59//jkYY/zHd3Z2NsLDw3HttdcCALKyslBZWYnXXnuNb5OGDRuGFStWoLS0FI8//jh/r379+uHYsWMwGAwNeFIEERz4ahP1tYcePXrgwoULuHTpEr8royHjXOr3iGClpKQEJ0+exDvvvMOP/Xbt2sUf7927N959911cuXJF0OvM3+PVfv364eTJk/Xu07KzszFkyBDMnj2b/83dq80XO/WljyaaDtqqSQQ0S5cuxQ8//IAjR45g2rRpiI2NxcSJEwEADz30ELZu3YpXX30Vp0+fxr/+9S989dVXLu6rBBFshIWFYebMmXjyySexbds2vu7L5cLN9dq1a/Hee+/hyJEjOHv2LP773/9Cp9MhISGBPyc7Oxsvv/wyTp06hdWrV+PTTz/FI488IpheUlISCgoKsG7dOpw5cwarVq3C+vXrXc5ZtGgRPv74YyxatAjHjx9Hbm4uXnrpJQBA9+7dMWXKFNxzzz344osvkJ+fj71792L58uX48ssvG/xc/JVuly5dcPjwYZw8eRLFxcUe0UIJoqkZOXIk0tLSMGXKFBw8eBB79+7FPffcg6FDh0puWdyzZw9efPFF7N+/HwUFBfjiiy9w+fJlfhJ8yZIlWL58OVatWoVTp04hNzcX77//Pl599VWXdFavXo3169fjxIkTmDNnDkpLSzFjxgwAwOzZs3HhwgU89NBDOHHiBDZu3IhFixbhscce49ugqKgo9O7dGx9++CGGDRsGALjhhhtw8OBBjwn+efPm4eeff8bcuXNx6NAhnD59Ghs3buQn6giiNeCrTdTXHm666SZ069YNU6dOxeHDh5GdnY358+cDQL3Gul26dEFVVRV++OEHFBcXu2wpI4hAJioqCjExMXj77beRl5eHbdu24bHHHuOPT548GR07dsTEiRORnZ2Ns2fP4vPPP+ejyvp7vLpw4UL8+9//xpIlS3D06FEcP34c69at4+1SjKSkJOzfvx/ffPMNTp06hQULFnhMgvsyPvWljyaaDnrCRECzYsUKPPLII+jfvz8uXryIzZs3Q61WA3Ds6f7nP/+JV199FX369MHXX3+Nv/71ry6usgQRjKxcuRJZWVkYP348Ro4ciczMTPTv31/w3MjISLzzzjvIyMhA79698f3332Pz5s2IiYnhz3n88cexf/9+pKen4/nnn8err76KUaNGCaZ3yy234K9//Svmzp2Lvn374ueff8aCBQtczhk2bBg+/fRTbNq0CX379sXw4cOxd+9e/vj777+Pe+65B48//jh69OiBiRMnYt++fY3eiuKPdO+991706NEDAwYMQLt27ZCdnd2oPBFEfZHJZNi4cSOioqJwww03YOTIkejatSs++eQTyev0ej1++ukn3HzzzejevTvmz5+PV155BWPGjAEAzJo1C++++y7ef/99pKWlYejQoVi7di0SExNd0lmxYgVWrFiBPn36YNeuXdi0aRNiY2MBANdccw22bt2KvXv3ok+fPnjggQcwc+ZMj4+CoUOHwmaz8ZME0dHRSE1NRceOHV30GHv37o0dO3bg1KlTyMrKQnp6OhYuXIhOnTo19jESREDhi03U1x4UCgU2bNiAqqoqDBw4ELNmzeK9wesz1h0yZAgeeOAB3HnnnWjXrh1efvnlxhWWIJoJuVyOdevW4cCBA+jVqxf++te/YuXKlfxxtVqNb7/9Fu3bt8fNN9+MtLQ0rFixgt966e/x6qhRo7BlyxZ8++23GDhwIK6//nq89tprLovVQtx///249dZbceedd2LQoEEoKSlx8T4DfBuf+tpHE02DjJH4CxGAbN++HTfeeCNKS0sRGRnp83X33nsvTpw4gZ07dzZd5ggiiOjSpQseffRRPProoy2dFYIgWpBz584hMTEROTk56Nu3b0tnhyCIBpCdnY3MzEzk5eW5BMIhCIIgmhbSOCOCmr/97W+46aabEBoaiq+++goffPAB3nzzzZbOFkEQBEEQBEE0ivXr1yMsLAxJSUnIy8vDI488goyMDJo0IwiCaGZo4owIavbu3YuXX34ZlZWV6Nq1K1atWoVZs2a1dLYIgiAIgiAIolFUVlZi3rx5KCgoQGxsLEaOHOkS5ZogCIJoHmirJkEQBEEQBEEQBEEQBEEIQMEBCIIgCIIgCIIgCIIgCEIAmjgjCIIgCIIgCIIgCIIgCAFo4owgCIIgCIIgCIIgCIIgBKCJM4IgCIIgCIIgCIIgCIIQgCbOCIIgCIIgCIIgCIIgCEIAmjgjCIIgCIIgCIIgCIIgCAFo4owgCIIgCIIgCIIgCIIgBKCJM4IgCIIgCIIgCIIgCIIQgCbOCIIgCIIgCIIgCIIgCEKA/wfpPoFJF4NJyAAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.regplot(x='displacement' , y='mpg', data = df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "iafY-yOjTLvN",
        "outputId": "5fcdf271-a365-4be7-b00d-fc7ebc437bfa"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='displacement', ylabel='mpg'>"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**DEFINE TARGET VARIABLE Y AND FEATURE X**"
      ],
      "metadata": {
        "id": "TuclppRwejWX"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sje4MOq1TZOF",
        "outputId": "83c28adf-74be-4554-8f05-ce165dea260b"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['mpg', 'cylinders', 'displacement', 'horsepower', 'weight',\n",
              "       'acceleration', 'model_year', 'origin', 'name'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y=df['mpg']"
      ],
      "metadata": {
        "id": "WA-nl9f1Tg03"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y.shape"
      ],
      "metadata": {
        "id": "b75Y2W3KTkn2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=df[['displacement', 'horsepower', 'weight','acceleration']]"
      ],
      "metadata": {
        "id": "knjvylB-Trgz"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x.shape"
      ],
      "metadata": {
        "id": "-jL5i6oDT11R"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x"
      ],
      "metadata": {
        "id": "MzJTmgbfT4Ma"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler"
      ],
      "metadata": {
        "id": "nQL1_uANUDjM"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ss= StandardScaler()"
      ],
      "metadata": {
        "id": "3B0bnVCxUOFs"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x = ss.fit_transform(x)"
      ],
      "metadata": {
        "id": "KQg3StdCUUmL"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x"
      ],
      "metadata": {
        "id": "3_phKttmUgt2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pd.DataFrame(x).describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "1pBoHsJ1UjQ8",
        "outputId": "079dd660-dc66-472e-ba01-d39b9ce24ae1"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                  0             1             2             3\n",
              "count  3.920000e+02  3.920000e+02  3.920000e+02  3.920000e+02\n",
              "mean  -7.250436e-17 -1.812609e-16 -1.812609e-17  4.350262e-16\n",
              "std    1.001278e+00  1.001278e+00  1.001278e+00  1.001278e+00\n",
              "min   -1.209563e+00 -1.520975e+00 -1.608575e+00 -2.736983e+00\n",
              "25%   -8.555316e-01 -7.665929e-01 -8.868535e-01 -6.410551e-01\n",
              "50%   -4.153842e-01 -2.853488e-01 -2.052109e-01 -1.499869e-02\n",
              "75%    7.782764e-01  5.600800e-01  7.510927e-01  5.384714e-01\n",
              "max    2.493416e+00  3.265452e+00  2.549061e+00  3.360262e+00"
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-ecd4db6f-e9e1-41d2-8518-8e33475bb616\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>3.920000e+02</td>\n",
              "      <td>3.920000e+02</td>\n",
              "      <td>3.920000e+02</td>\n",
              "      <td>3.920000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>-7.250436e-17</td>\n",
              "      <td>-1.812609e-16</td>\n",
              "      <td>-1.812609e-17</td>\n",
              "      <td>4.350262e-16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.001278e+00</td>\n",
              "      <td>1.001278e+00</td>\n",
              "      <td>1.001278e+00</td>\n",
              "      <td>1.001278e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-1.209563e+00</td>\n",
              "      <td>-1.520975e+00</td>\n",
              "      <td>-1.608575e+00</td>\n",
              "      <td>-2.736983e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>-8.555316e-01</td>\n",
              "      <td>-7.665929e-01</td>\n",
              "      <td>-8.868535e-01</td>\n",
              "      <td>-6.410551e-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>-4.153842e-01</td>\n",
              "      <td>-2.853488e-01</td>\n",
              "      <td>-2.052109e-01</td>\n",
              "      <td>-1.499869e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>7.782764e-01</td>\n",
              "      <td>5.600800e-01</td>\n",
              "      <td>7.510927e-01</td>\n",
              "      <td>5.384714e-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2.493416e+00</td>\n",
              "      <td>3.265452e+00</td>\n",
              "      <td>2.549061e+00</td>\n",
              "      <td>3.360262e+00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ecd4db6f-e9e1-41d2-8518-8e33475bb616')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-0689e10b-9293-4eed-8707-6dcf5f5b67ed\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0689e10b-9293-4eed-8707-6dcf5f5b67ed')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-0689e10b-9293-4eed-8707-6dcf5f5b67ed button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ecd4db6f-e9e1-41d2-8518-8e33475bb616 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ecd4db6f-e9e1-41d2-8518-8e33475bb616');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "**SPLIT DATA INTO TRAIN TEST**"
      ],
      "metadata": {
        "id": "XOS1ytG3eCKS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split"
      ],
      "metadata": {
        "id": "x0HuoBshUu1W"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train, x_test, y_train, y_test = train_test_split(x,y, train_size=0.7 , random_state=2529)"
      ],
      "metadata": {
        "id": "_V01jGguVHqS"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x_train.shape, x_test.shape, y_train.shape, y_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tdNyZAckVIJl",
        "outputId": "9d3f6565-4e12-46c5-c4c8-a72bda4e579d"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "((274, 4), (118, 4), (274,), (118,))"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**LINEAR REGRESSION MODEL**"
      ],
      "metadata": {
        "id": "A7UXg_RUd8Tv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LinearRegression"
      ],
      "metadata": {
        "id": "wByO9N3YVIiI"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lr=LinearRegression()"
      ],
      "metadata": {
        "id": "-8f1rc8LVI5f"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lr.fit(x_train,y_train)"
      ],
      "metadata": {
        "id": "yMlu2R3uW5Ku"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lr.intercept_"
      ],
      "metadata": {
        "id": "2lpccV8RW5wi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lr.coef_"
      ],
      "metadata": {
        "id": "2CNSkUj2XdIM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Mileage = 23.4-1.05(Displacement)-1.68(Horsepower)-4.10(weight)-0.115(Acceleration)+Error**"
      ],
      "metadata": {
        "id": "88Vl6JyxdbBu"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**PREDICT TEST DATA**"
      ],
      "metadata": {
        "id": "FqdZCMgVdJx0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred=lr.predict(x_test)"
      ],
      "metadata": {
        "id": "EPbGfnrjXhKr"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred"
      ],
      "metadata": {
        "id": "6aC6b_PFXqgb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**MODEL ACCURACY**"
      ],
      "metadata": {
        "id": "Tf75zCGdc33O"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import mean_absolute_error,mean_absolute_percentage_error,r2_score"
      ],
      "metadata": {
        "id": "YZt9p1HYXt32"
      },
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "mean_absolute_error(y_test,y_pred)"
      ],
      "metadata": {
        "id": "apTYzCQgYkup"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "mean_absolute_percentage_error(y_test,y_pred)"
      ],
      "metadata": {
        "id": "rDcrtNsEYa6P"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "r2_score(y_test,y_pred)"
      ],
      "metadata": {
        "id": "-_UehLRvYbON"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**POLYNOMIAL REGRESSION**"
      ],
      "metadata": {
        "id": "D1hwHlrmcw4M"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import PolynomialFeatures"
      ],
      "metadata": {
        "id": "TOJCANXAYb3Z"
      },
      "execution_count": 44,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "poly=PolynomialFeatures(degree=2,interaction_only=True, include_bias=False)"
      ],
      "metadata": {
        "id": "l59CdwBnZFTZ"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train2 = poly.fit_transform(x_train)"
      ],
      "metadata": {
        "id": "FN0WikIKZF7P"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_test2 = poly.fit_transform(x_test)"
      ],
      "metadata": {
        "id": "-s7n29DbZGWL"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lr.fit(X_train2,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "kYyQ_T0XZ71s",
        "outputId": "6bb4314e-73b8-4ab7-9a0a-557ebdc9f3b8"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lr.intercept_"
      ],
      "metadata": {
        "id": "nAHksT4gaFTy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lr.coef_"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6G8Psc3TaFok",
        "outputId": "a83a8cfa-f388-4843-a9d2-0ff50fef73b2"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([-2.76070596, -5.00559628, -1.36884133, -0.81225214,  1.24596571,\n",
              "       -0.12475017, -0.90542822,  1.35064048, -0.17337823,  1.41680398])"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred_poly = lr.predict(X_test2)"
      ],
      "metadata": {
        "id": "l7YRh5OuaMVL"
      },
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**MODEL ACCURACY**"
      ],
      "metadata": {
        "id": "7JfQq6R5chT_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import mean_absolute_error,mean_absolute_percentage_error,r2_score"
      ],
      "metadata": {
        "id": "d0ZROfssaacP"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "mean_absolute_error(y_test,y_pred_poly)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sqzw4_-NcNHZ",
        "outputId": "77b2c2de-6173-4e19-f96a-6cc8f039038e"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2.7887147720295977"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mean_absolute_percentage_error(y_test,y_pred_poly)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r6wVmyBkcVHd",
        "outputId": "e7cf8527-fa90-4a67-f824-c0f4232215fa"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.12074018342938687"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "r2_score(y_test,y_pred_poly)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wsQ2huZwcVjX",
        "outputId": "fccfe0a5-8198-40d7-f746-77b2856f39eb"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.7461731314563803"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    }
  ]
}
